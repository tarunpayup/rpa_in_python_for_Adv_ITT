import pandas as pd
from tkinter import Tk, filedialog, messagebox
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager
import time

# === Select Excel File via Dialog ===
def get_excel_path():
    root = Tk()
    root.withdraw()  # Hide main window
    file_path = filedialog.askopenfilename(
        title="Select Excel File",
        filetypes=[("Excel files", "*.xlsx *.xls")]
    )
    if not file_path:
        messagebox.showerror("Error", "No Excel file selected!")
        exit()
    return file_path

# === Load Data from Excel ===
excel_path = get_excel_path()
data = pd.read_excel(excel_path)

# === Form URL ===
form_url = 'https://forms.gle/qgUHSZpDT82sV4af6'

# === Start Browser ===
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))
wait = WebDriverWait(driver, 15)

# === Loop through each row and fill the form ===
for index, row in data.iterrows():
    print(f"Submitting row {index+1}...")

    # Load the form
    driver.get(form_url)
    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, 'input[type="text"]')))

    # Fill Name
    name_field = wait.until(EC.element_to_be_clickable((By.XPATH, '(//input[@type="text"])[1]')))
    name_field.send_keys(str(row['name']))
    time.sleep(0.5)

    # Fill Email
    email_field = wait.until(EC.element_to_be_clickable((By.XPATH, '(//input[@type="text"])[2]')))
    email_field.send_keys(str(row['email']))
    time.sleep(0.5)

    # Fill City
    city_field = wait.until(EC.element_to_be_clickable((By.XPATH, '(//input[@type="text"])[3]')))
    city_field.send_keys(str(row['city']))
    time.sleep(0.5)

    # Select Gender
    gender_options = wait.until(EC.presence_of_all_elements_located((By.CSS_SELECTOR, 'div[role="radio"]')))
    for option in gender_options:
        label = option.get_attribute("aria-label")
        if label and str(row['gender']).lower() in label.lower():
            driver.execute_script("arguments[0].scrollIntoView(true);", option)
            wait.until(EC.element_to_be_clickable(option)).click()
            break
    time.sleep(0.5)

    # Submit Form
    submit_button = wait.until(EC.element_to_be_clickable(
        (By.XPATH, '//div[@role="button"][.//span[contains(text(), "Submit")]]')
    ))
    driver.execute_script("arguments[0].scrollIntoView(true);", submit_button)
    submit_button.click()

    time.sleep(2)
    print(f"Row {index+1} submitted.")

# === Done ===
input("All entries submitted. Press Enter to close browser...")
driver.quit()
